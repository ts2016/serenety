// Row
@mixin make-row($margin-lr: $grid-border-lr) {
  margin-left:  ceil(($margin-lr / -2));
  margin-right: floor(($margin-lr / -2));
  @include clearfix;
}

// Generate the columns. General properties fpr all columns
@mixin make-grid-columns($i: 1, $list: ".column-#{$i}") {
  @for $i from (1 + 1) through $grid-columns {
    $list: "#{$list}, .column-#{$i}";
  }
  #{$list} {
    position: relative;
    min-height: 1px;
    padding-left:  ceil(($grid-border-lr / 2));
    padding-right: floor(($grid-border-lr / 2));
  }
}

@mixin float-grid-columns($i: 1, $list: ".column-#{$i}") {
  @for $i from (1 + 1) through $grid-columns {
    $list: "#{$list}, .column-#{$i}";
  }
  #{$list} {
    float: left;
  }
}

@mixin calc-grid-column($index, $type) {
  @if ($type == width) and ($index > 0) {
    .column-#{$index} {
      width: percentage(($index / $grid-columns));
    }
  }
  @if ($type == offset) {
    .column-offset-#{$index} {
      margin-left: percentage(($index / $grid-columns));
    }
  }
}

@mixin loop-grid-columns($columns, $type) {
  @for $i from 0 through $columns {
    @include calc-grid-column($i, $type);
  }
}

// Make grid
@mixin make-grid() {
  @include float-grid-columns();
  @include loop-grid-columns($grid-columns, width);
  @include loop-grid-columns($grid-columns, offset);
}
